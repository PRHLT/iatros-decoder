%!PS-Adobe-2.0 EPSF-2.0
%%Creator: Box::print() by Christian Lindig
%%BoundingBox: 42 35 552 344
%%Pages: 1
%%EndComments

gsave
32 349 translate
0.463215 -0.463215 scale
% $Id$
% Header for DDD PostScript Box output

% Copyright (C) 1995-1998 Technische Universitaet Braunschweig, Germany.
% Written by Christian Lindig <lindig@ips.cs.tu-bs.de>.
% 
% This file is part of DDD.
% 
% DDD is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public
% License as published by the Free Software Foundation; either
% version 2 of the License, or (at your option) any later version.
% 
% DDD is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public
% License along with DDD -- see the file COPYING.
% If not, write to the Free Software Foundation, Inc.,
% 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
% 
% DDD is the data display debugger.
% For details, see the DDD World-Wide-Web page, 
% `http://www.gnu.org/software/ddd/',
% or send a mail to the DDD developers <ddd@gnu.org>.

% Make all definitions local to the ddddict dictionary
/ddddict 25 dict def 

ddddict begin		% make dict active 


% Global variables
/fontSize+ 12 def
/font+ /Courier def  


% Some small utilities
/cm { 28.34646 mul } bind def


% ISOLATIN1* - reencode a font to ISO Latin 1 encoding
%
% newfont table oldfont isolatin1*

/isolatin1* {
	findfont
	dup maxlength dict begin
	{
		1 index /FID ne { def } { pop pop } ifelse
	} forall
	/Encoding exch def
	dup /FontName exch def
	currentdict end definefont pop
} bind def


% Define the ISO Latin 1 encoding of a font
 
/isotable[
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar
/braceright/asciitilde/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve/dotaccent/dieresis
/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron/.notdef/exclamdown/cent
/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guilsinglleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve
/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex
/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute
/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis
/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def


% YCORRECT*
% The reference point of a string ist NOT its lower left corner but 
% its baseline.  Therefore, the y coordinate must be corrected.  
% Returns the correction for the current font.
%
% ycorrect* y

/ycorrect* {
	currentfont /FontBBox get
	aload pop pop pop
	currentfont /FontMatrix get dtransform
	exch pop
} def 


% TEXT*
% print out a string and make sure not to require more space than
% specified.
% font xsize ysize xorigin yorigin (string) text*

/text* {

	/string+ exch def		% set up some variables ..
	moveto				% move to (xorigin,yorigin)
	/ysize+ exch def
	/xsize+ exch def
	/thefont+ exch def

	% is the right font already selected ?

	thefont+ font+ ne 
	ysize+ fontSize+ ne
	or {	
		% set up the right font - reencode it	
		
		/Symbol thefont+ eq 
		{
			thefont+ findfont
		}{

			/isofont+ isotable thefont+ isolatin1*	
			/isofont+ findfont
		}ifelse

		[ysize+ 0 0 ysize+ neg 0 0] makefont
		setfont
		
		/font+ thefont+ def
		/fontSize+ ysize+ def
	} if

	% correct current point 

	0 ycorrect* neg rmoveto

	% string too long?  Scale it down ...
	% The actual font is scaled. There is a good chance,
	% that this will not happen too often when the font is not
	% changed during the calls of text*

	xsize+ string+ stringwidth pop div dup dup
	1 lt {
		0 0 1 0 0 6 array astore currentfont exch 
		makefont setfont
		pop
	}{ 
		% string is too short ... scale it up

		1.05 gt {
			0 0 1 0 0 6 array astore currentfont exch 
			makefont setfont	
		}{
			pop

		} ifelse
	} ifelse
	
	string+ show

} bind def

	
% ARROWLINE*
% Draw a line of given width with an arrow at its end
% len gives the height of the triangle forming the head of the arrow
% and angle the angle at its top
%	
% angle len  x1 y1 x2 y2 linewidth arrowline*

/arrowline* {
	setlinewidth			% angle len x1 y1 x2 y2
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/len+ exch def			% height of triangle

	/alpha+ 
		y2 y1 sub		% define alpha+
		x2 x1 sub
		atan
	def

	/base+				% define half of baseline
		exch 
		2 div dup		% angle angle
		sin exch cos 	 	% sin(angle) cos(angle)
		div			% tan(angle)
		len+
		mul			% half of baseline
	def  
	
	newpath				% draw the line
	x1 y1 moveto 
	x2 len+ alpha+ cos mul sub 	% shorten the line to the end  
	y2 len+ alpha+ sin mul sub 	% of the triangle
	lineto
	stroke		

	gsave				% set the origin to the head of
	0 setlinewidth			% the arrow and rotate the system
	x2 y2 
	translate			% origin now at x2 y2

	alpha+ 90 sub rotate 		% rotate the system

	newpath				% draw a triangle
	0 0 moveto
	base+ len+ neg rlineto
	base+ 2 mul neg 0 rlineto
	closepath
	fill
	
	grestore
} bind def

% ARROWHEAD*
% draw an arrow head inclined by alpha at (x,y)
%
% angle len alpha x y

/arrowhead* {
	/y exch def
	/x exch def
	/alpha+ exch def
	/len+ exch def			% height of triangle

	/base+				% define half of baseline
		exch 
		2 div dup		% angle angle
		sin exch cos 	 	% sin(angle) cos(angle)
		div			% tan(angle)
		len+
		mul			% half of baseline
	def

	gsave				% set the origin to the head of
	0 setlinewidth			% the arrow and rotate the system
	x y 
	translate			% origin now at x y

	alpha+ 90 sub rotate 		% rotate the system

	newpath				% draw a triangle
	0 0 moveto
	base+ len+ neg rlineto
	base+ 2 mul neg 0 rlineto
	closepath
	fill
	
	grestore
} bind def


% LINE*
% draw a line of given width from (x1,y1) to (x2,y2)
%
% x1 y1 x2 y2 width line*

/line* {
	setlinewidth	% x1 y1 x2 y2
	newpath
	4 2 roll 	% x2 y2 x1 y1
	moveto		% x2 y2
	lineto		
	stroke
} bind def


% CLEAN*
%
% fill a box given by four points with white colour ..
% x1 y1 x2 y2 x3 y3 x4 y4 clean*

/clean* {
	gsave
	1 setgray
	0 setlinewidth
	newpath
	moveto  lineto  lineto lineto
	closepath
	fill
	grestore
} bind def


% BOX*
% fill a box given by four points
%
% x1 y1 x2 y2 x3 y3 x4 y4 box*

/box* {
	0 setlinewidth
	newpath
	moveto 	lineto 	lineto lineto
	closepath
	fill
} bind def


% ARC*
% draw an ellipse with center (cx,cy), radius dx dy, starting at start
% and ending at end.
%
% start end dx dy cx cy width arc*

/arc* {
	gsave
	setlinewidth
	translate
	newpath
	dup 3 1 roll		% start end dy dx dy
	div 1 scale		% dy dx/dy 1 scale => start end dy
	
	0 exch  0 exch		% start end 0 0 dy 
	5 -2 roll 		% 0 0 dy start end

	dup
	0 eq {			% replace 0 by 360
		pop 
		360
	} if
	arc
	stroke
	grestore
} bind def


% BEGINCOLOR* / ENDCOLOR*
% Draw something using a specific foreground color
%
% red green blue begincolor* SOMETHING endcolor*

/begincolor* {
        currentrgbcolor         % red green blue red' green' blue'
        6 3 roll                % red' green' blue' red green blue
	setrgbcolor             % red' green' blue'
} bind def

/endcolor* {
	setrgbcolor
} bind def


% Set up the right font to the right size

/isofont+ isotable font+ isolatin1* 	% reencode font+
					% and make it the current font
/isofont+ findfont
[fontSize+ 0 0 fontSize+ neg 0 0] makefont
setfont


%%EndProlog
0 0 0.545098 begincolor*
30 10 144 71 144 86 1 arrowline*
/Helvetica-Narrow 12 13 138 76 (*\(\)) text*
30 10 134 170 125 201 1 arrowline*
/Helvetica-Narrow 74 13 93 183 (.vector[0] @ 10) text*
30 10 153 283 359 149 1 arrowline*
/Helvetica-Narrow 24 13 244 214 (*\(\)[0]) text*
30 10 153 312 290 292 1 arrowline*
/Helvetica-Narrow 24 13 209 300 (*\(\)[1]) text*
30 10 153 339 290 385 1 arrowline*
/Helvetica-Narrow 24 13 209 360 (*\(\)[2]) text*
30 10 636 117 830 161 1 arrowline*
/Helvetica-Narrow 67 13 700 137 (.words[0] @ 5) text*
30 10 574 272 616 272 1 arrowline*
/Helvetica-Narrow 24 13 583 270 (name) text*
23 126 54 54 605 187 1 arc*
/Helvetica-Narrow 41 13 636 206 (state_bo) text*
226 23 54 54 605 187 1 arc*
30 10 136 567 149 arrowhead*
30 10 574 432 593 432 1 arrowline*
/Helvetica-Narrow 24 13 571 430 (name) text*
30 10 574 428 857 418 1 arrowline*
/Helvetica-Narrow 29 13 701 421 (words) text*
13 124 136 136 649 260 1 arc*
/Helvetica-Narrow 41 13 764 286 (state_bo) text*
235 12 136 136 649 260 1 arc*
30 10 145 570 149 arrowhead*
30 10 153 366 364 539 1 arrowline*
/Helvetica-Narrow 24 13 246 450 (*\(\)[9]) text*
30 10 590 608 709 608 1 arrowline*
/Helvetica-Narrow 62 13 618 606 (.name[0] @ 2) text*
8 115 116 116 620 433 1 arc*
/Helvetica-Narrow 41 13 716 446 (state_bo) text*
234 8 116 116 620 433 1 arc*
30 10 144 551 341 arrowhead*
endcolor*
0 0 0 begincolor*
26 25 263 25 263 71 26 71 clean*
0 0 0 begincolor* % black
26 25 262 25 262 26 26 26 box* %(26, 25)(236, 1)
26 26 27 26 27 69 26 69 box* %(26, 26)(1, 43)
0 0 0 begincolor* % black
/Courier 20 18 29 46 (70) text*
/Courier 20 18 49 46 (: ) text*
/Courier-BoldOblique 70 18 69 46 (grammar) text*
endcolor*
29 46 259 46 259 47 29 47 box* %(29, 46)(230, 1)
0 0 0.545098 begincolor* % blue4
/Courier 230 18 29 67 (\(grammar_t *\) 0x808e608) text*
endcolor*
261 26 262 26 262 69 261 69 box* %(261, 26)(1, 43)
26 69 262 69 262 70 26 70 box* %(26, 69)(236, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
262 26 263 26 263 70 262 70 box* %(262, 26)(1, 44)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
27 70 263 70 263 71 27 71 box* %(27, 70)(236, 1)
endcolor*
22 86 267 86 267 171 22 171 clean*
0 0 0 begincolor* % black
22 86 266 86 266 87 22 87 box* %(22, 86)(244, 1)
22 87 23 87 23 169 22 169 box* %(22, 87)(1, 82)
0 0 0 begincolor* % black
25 89 263 89 263 90 25 90 box* %(25, 89)(238, 1)
25 90 26 90 26 166 25 166 box* %(25, 90)(1, 76)
/Courier 50 18 40 110 (table) text*
/Courier 30 18 140 110 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 170 110 (0x808e630) text*
endcolor*
/Courier 60 18 40 128 (vector) text*
/Courier 30 18 140 128 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 170 128 (0x8090ed8) text*
endcolor*
/Courier 100 18 40 146 (num_states) text*
/Courier 30 18 140 146 ( = ) text*
0 0 0 begincolor* % black
/Courier 20 18 170 146 (10) text*
endcolor*
/Courier 10 18 40 164 (n) text*
/Courier 30 18 140 164 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 170 164 (3) text*
endcolor*
262 90 263 90 263 166 262 166 box* %(262, 90)(1, 76)
25 166 263 166 263 167 25 167 box* %(25, 166)(238, 1)
endcolor*
265 87 266 87 266 169 265 169 box* %(265, 87)(1, 82)
22 169 266 169 266 170 22 170 box* %(22, 169)(244, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
266 87 267 87 267 170 266 170 box* %(266, 87)(1, 83)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
23 170 267 170 267 171 23 171 box* %(23, 170)(244, 1)
endcolor*
616 260 633 260 633 285 616 285 clean*
0 0 0 begincolor* % black
616 260 632 260 632 261 616 261 box* %(616, 260)(16, 1)
616 261 617 261 617 283 616 283 box* %(616, 261)(1, 22)
0 0 0 begincolor* % black
/Courier 10 18 619 281 (1) text*
endcolor*
631 261 632 261 632 283 631 283 box* %(631, 261)(1, 22)
616 283 632 283 632 284 616 284 box* %(616, 283)(16, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
632 261 633 261 633 284 632 284 box* %(632, 261)(1, 23)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
617 284 633 284 633 285 617 285 box* %(617, 284)(16, 1)
endcolor*
290 203 575 203 575 342 290 342 clean*
0 0 0 begincolor* % black
290 203 574 203 574 204 290 204 box* %(290, 203)(284, 1)
290 204 291 204 291 340 290 340 box* %(290, 204)(1, 136)
0 0 0 begincolor* % black
293 206 571 206 571 207 293 207 box* %(293, 206)(278, 1)
293 207 294 207 294 337 293 337 box* %(293, 207)(1, 130)
/Courier 50 18 308 227 (words) text*
/Courier 30 18 448 227 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 478 227 (0x808fd70) text*
endcolor*
/Courier 90 18 308 245 (num_words) text*
/Courier 30 18 448 245 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 478 245 (0) text*
endcolor*
/Courier 40 18 308 263 (name) text*
/Courier 30 18 448 263 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 478 263 (0x808fd80) text*
endcolor*
/Courier 140 18 308 281 (num_words_name) text*
/Courier 30 18 448 281 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 478 281 (1) text*
endcolor*
/Courier 20 18 308 299 (bo) text*
/Courier 30 18 448 299 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 478 299 (0) text*
endcolor*
/Courier 80 18 308 317 (state_bo) text*
/Courier 30 18 448 317 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 478 317 (0x808fd00) text*
endcolor*
/Courier 90 18 308 335 (num_state) text*
/Courier 30 18 448 335 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 478 335 (1) text*
endcolor*
570 207 571 207 571 337 570 337 box* %(570, 207)(1, 130)
293 337 571 337 571 338 293 338 box* %(293, 337)(278, 1)
endcolor*
573 204 574 204 574 340 573 340 box* %(573, 204)(1, 136)
290 340 574 340 574 341 290 341 box* %(290, 340)(284, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
574 204 575 204 575 341 574 341 box* %(574, 204)(1, 137)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
291 341 575 341 575 342 291 342 box* %(291, 341)(284, 1)
endcolor*
593 420 720 420 720 445 593 445 clean*
0 0 0 begincolor* % black
593 420 719 420 719 421 593 421 box* %(593, 420)(126, 1)
593 421 594 421 594 443 593 443 box* %(593, 421)(1, 22)
0 0 0 begincolor* % black
/Courier 120 18 596 441 (FIRST_SYMBOL) text*
endcolor*
718 421 719 421 719 443 718 443 box* %(718, 421)(1, 22)
593 443 719 443 719 444 593 444 box* %(593, 443)(126, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
719 421 720 421 720 444 719 444 box* %(719, 421)(1, 23)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
594 444 720 444 720 445 594 445 box* %(594, 444)(126, 1)
endcolor*
290 363 575 363 575 502 290 502 clean*
0 0 0 begincolor* % black
290 363 574 363 574 364 290 364 box* %(290, 363)(284, 1)
290 364 291 364 291 500 290 500 box* %(290, 364)(1, 136)
0 0 0 begincolor* % black
293 366 571 366 571 367 293 367 box* %(293, 366)(278, 1)
293 367 294 367 294 497 293 497 box* %(293, 367)(1, 130)
/Courier 50 18 308 387 (words) text*
/Courier 30 18 448 387 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 478 387 (0x808fd20) text*
endcolor*
/Courier 90 18 308 405 (num_words) text*
/Courier 30 18 448 405 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 478 405 (1) text*
endcolor*
/Courier 40 18 308 423 (name) text*
/Courier 30 18 448 423 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 478 423 (0x808fde0) text*
endcolor*
/Courier 140 18 308 441 (num_words_name) text*
/Courier 30 18 448 441 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 478 441 (1) text*
endcolor*
/Courier 20 18 308 459 (bo) text*
/Courier 30 18 448 459 ( = ) text*
0 0 0 begincolor* % black
/Courier 40 18 478 459 (-inf) text*
endcolor*
/Courier 80 18 308 477 (state_bo) text*
/Courier 30 18 448 477 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 478 477 (0x808fd00) text*
endcolor*
/Courier 90 18 308 495 (num_state) text*
/Courier 30 18 448 495 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 478 495 (2) text*
endcolor*
570 367 571 367 571 497 570 497 box* %(570, 367)(1, 130)
293 497 571 497 571 498 293 498 box* %(293, 497)(278, 1)
endcolor*
573 364 574 364 574 500 573 500 box* %(573, 364)(1, 136)
290 500 574 500 574 501 290 501 box* %(290, 500)(284, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
574 364 575 364 575 501 574 501 box* %(574, 364)(1, 137)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
291 501 575 501 575 502 291 502 box* %(291, 501)(284, 1)
endcolor*
39 201 154 201 154 439 39 439 clean*
0 0 0 begincolor* % black
39 201 153 201 153 202 39 202 box* %(39, 201)(114, 1)
39 202 40 202 40 437 39 437 box* %(39, 202)(1, 235)
0 0 0.545098 begincolor* % blue4
42 204 150 204 150 205 42 205 box* %(42, 204)(108, 1)
42 205 43 205 43 434 42 434 box* %(42, 205)(1, 229)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 225 (0x808fd00) text*
endcolor*
57 227 147 227 147 228 57 228 box* %(57, 227)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 248 (0x808fd50) text*
endcolor*
57 250 147 250 147 251 57 251 box* %(57, 250)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 271 (0x808fdc0) text*
endcolor*
57 273 147 273 147 274 57 274 box* %(57, 273)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 294 (0x808fda0) text*
endcolor*
57 296 147 296 147 297 57 297 box* %(57, 296)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 317 (0x808fe98) text*
endcolor*
57 319 147 319 147 320 57 320 box* %(57, 319)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 340 (0x808ff48) text*
endcolor*
57 342 147 342 147 343 57 343 box* %(57, 342)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 363 (0x808ff98) text*
endcolor*
57 365 147 365 147 366 57 366 box* %(57, 365)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 386 (0x808ff28) text*
endcolor*
57 388 147 388 147 389 57 389 box* %(57, 388)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 409 (0x8090e88) text*
endcolor*
57 411 147 411 147 412 57 412 box* %(57, 411)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 57 432 (0x8090f08) text*
endcolor*
149 205 150 205 150 434 149 434 box* %(149, 205)(1, 229)
42 434 150 434 150 435 42 435 box* %(42, 434)(108, 1)
endcolor*
152 202 153 202 153 437 152 437 box* %(152, 202)(1, 235)
39 437 153 437 153 438 39 438 box* %(39, 437)(114, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
153 202 154 202 154 438 153 438 box* %(153, 202)(1, 236)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
40 438 154 438 154 439 40 439 box* %(40, 438)(114, 1)
endcolor*
709 581 764 581 764 635 709 635 clean*
0 0 0 begincolor* % black
709 581 763 581 763 582 709 582 box* %(709, 581)(54, 1)
709 582 710 582 710 633 709 633 box* %(709, 582)(1, 51)
0 0 0.545098 begincolor* % blue4
712 584 760 584 760 585 712 585 box* %(712, 584)(48, 1)
712 585 713 585 713 630 712 630 box* %(712, 585)(1, 45)
0 0 0 begincolor* % black
/Courier 30 18 727 605 (142) text*
endcolor*
727 607 757 607 757 608 727 608 box* %(727, 607)(30, 1)
0 0 0 begincolor* % black
/Courier 10 18 747 628 (1) text*
endcolor*
759 585 760 585 760 630 759 630 box* %(759, 585)(1, 45)
712 630 760 630 760 631 712 631 box* %(712, 630)(48, 1)
endcolor*
762 582 763 582 763 633 762 633 box* %(762, 582)(1, 51)
709 633 763 633 763 634 709 634 box* %(709, 633)(54, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
763 582 764 582 764 634 763 634 box* %(763, 582)(1, 52)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
710 634 764 634 764 635 710 635 box* %(710, 634)(54, 1)
endcolor*
306 539 591 539 591 678 306 678 clean*
0 0 0 begincolor* % black
306 539 590 539 590 540 306 540 box* %(306, 539)(284, 1)
306 540 307 540 307 676 306 676 box* %(306, 540)(1, 136)
0 0 0 begincolor* % black
309 542 587 542 587 543 309 543 box* %(309, 542)(278, 1)
309 543 310 543 310 673 309 673 box* %(309, 543)(1, 130)
/Courier 50 18 324 563 (words) text*
/Courier 30 18 464 563 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 494 563 (0x8090f28) text*
endcolor*
/Courier 90 18 324 581 (num_words) text*
/Courier 30 18 464 581 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 494 581 (0) text*
endcolor*
/Courier 40 18 324 599 (name) text*
/Courier 30 18 464 599 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 494 599 (0x8090f38) text*
endcolor*
/Courier 140 18 324 617 (num_words_name) text*
/Courier 30 18 464 617 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 494 617 (2) text*
endcolor*
/Courier 20 18 324 635 (bo) text*
/Courier 30 18 464 635 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 494 635 (0) text*
endcolor*
/Courier 80 18 324 653 (state_bo) text*
/Courier 30 18 464 653 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 494 653 (0x808fd50) text*
endcolor*
/Courier 90 18 324 671 (num_state) text*
/Courier 30 18 464 671 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 494 671 (9) text*
endcolor*
586 543 587 543 587 673 586 673 box* %(586, 543)(1, 130)
309 673 587 673 587 674 309 674 box* %(309, 673)(278, 1)
endcolor*
589 540 590 540 590 676 589 676 box* %(589, 540)(1, 136)
306 676 590 676 590 677 306 677 box* %(306, 676)(284, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
590 540 591 540 591 677 590 677 box* %(590, 540)(1, 137)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
307 677 591 677 591 678 307 678 box* %(307, 677)(284, 1)
endcolor*
830 26 1123 26 1123 359 830 359 clean*
0 0 0 begincolor* % black
830 26 1122 26 1122 27 830 27 box* %(830, 26)(292, 1)
830 27 831 27 831 357 830 357 box* %(830, 27)(1, 330)
0 0 0.545098 begincolor* % blue4
833 29 1119 29 1119 30 833 30 box* %(833, 29)(286, 1)
833 30 834 30 834 354 833 354 box* %(833, 30)(1, 324)
0 0 0 begincolor* % black
848 32 1116 32 1116 33 848 33 box* %(848, 32)(268, 1)
848 33 849 33 849 91 848 91 box* %(848, 33)(1, 58)
/Courier 100 18 863 53 (state_next) text*
/Courier 30 18 963 53 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 993 53 (1) text*
endcolor*
/Courier 40 18 863 71 (word) text*
/Courier 30 18 963 71 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 993 71 (1) text*
endcolor*
/Courier 40 18 863 89 (prob) text*
/Courier 30 18 963 89 ( = ) text*
0 0 0 begincolor* % black
/Courier 110 18 993 89 (-1.38629448) text*
endcolor*
1115 33 1116 33 1116 91 1115 91 box* %(1115, 33)(1, 58)
848 91 1116 91 1116 92 848 92 box* %(848, 91)(268, 1)
endcolor*
848 94 1116 94 1116 95 848 95 box* %(848, 94)(268, 1)
0 0 0 begincolor* % black
848 97 1116 97 1116 98 848 98 box* %(848, 97)(268, 1)
848 98 849 98 849 156 848 156 box* %(848, 98)(1, 58)
/Courier 100 18 863 118 (state_next) text*
/Courier 30 18 963 118 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 993 118 (3) text*
endcolor*
/Courier 40 18 863 136 (word) text*
/Courier 30 18 963 136 ( = ) text*
0 0 0 begincolor* % black
/Courier 20 18 993 136 (15) text*
endcolor*
/Courier 40 18 863 154 (prob) text*
/Courier 30 18 963 154 ( = ) text*
0 0 0 begincolor* % black
/Courier 110 18 993 154 (-1.38629448) text*
endcolor*
1115 98 1116 98 1116 156 1115 156 box* %(1115, 98)(1, 58)
848 156 1116 156 1116 157 848 157 box* %(848, 156)(268, 1)
endcolor*
848 159 1116 159 1116 160 848 160 box* %(848, 159)(268, 1)
0 0 0 begincolor* % black
848 162 1116 162 1116 163 848 163 box* %(848, 162)(268, 1)
848 163 849 163 849 221 848 221 box* %(848, 163)(1, 58)
/Courier 100 18 863 183 (state_next) text*
/Courier 30 18 963 183 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 993 183 (4) text*
endcolor*
/Courier 40 18 863 201 (word) text*
/Courier 30 18 963 201 ( = ) text*
0 0 0 begincolor* % black
/Courier 20 18 993 201 (79) text*
endcolor*
/Courier 40 18 863 219 (prob) text*
/Courier 30 18 963 219 ( = ) text*
0 0 0 begincolor* % black
/Courier 110 18 993 219 (-1.38629448) text*
endcolor*
1115 163 1116 163 1116 221 1115 221 box* %(1115, 163)(1, 58)
848 221 1116 221 1116 222 848 222 box* %(848, 221)(268, 1)
endcolor*
848 224 1116 224 1116 225 848 225 box* %(848, 224)(268, 1)
0 0 0 begincolor* % black
848 227 1116 227 1116 228 848 228 box* %(848, 227)(268, 1)
848 228 849 228 849 286 848 286 box* %(848, 228)(1, 58)
/Courier 100 18 863 248 (state_next) text*
/Courier 30 18 963 248 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 993 248 (5) text*
endcolor*
/Courier 40 18 863 266 (word) text*
/Courier 30 18 963 266 ( = ) text*
0 0 0 begincolor* % black
/Courier 30 18 993 266 (142) text*
endcolor*
/Courier 40 18 863 284 (prob) text*
/Courier 30 18 963 284 ( = ) text*
0 0 0 begincolor* % black
/Courier 110 18 993 284 (-1.38629448) text*
endcolor*
1115 228 1116 228 1116 286 1115 286 box* %(1115, 228)(1, 58)
848 286 1116 286 1116 287 848 287 box* %(848, 286)(268, 1)
endcolor*
848 289 1116 289 1116 290 848 290 box* %(848, 289)(268, 1)
0 0 0 begincolor* % black
848 292 1116 292 1116 293 848 293 box* %(848, 292)(268, 1)
848 293 849 293 849 351 848 351 box* %(848, 293)(1, 58)
/Courier 100 18 863 313 (state_next) text*
/Courier 30 18 963 313 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 993 313 (2) text*
endcolor*
/Courier 40 18 863 331 (word) text*
/Courier 30 18 963 331 ( = ) text*
0 0 0 begincolor* % black
/Courier 120 18 993 331 (FIRST_SYMBOL) text*
endcolor*
/Courier 40 18 863 349 (prob) text*
/Courier 30 18 963 349 ( = ) text*
0 0 0 begincolor* % black
/Courier 40 18 993 349 (-inf) text*
endcolor*
1115 293 1116 293 1116 351 1115 351 box* %(1115, 293)(1, 58)
848 351 1116 351 1116 352 848 352 box* %(848, 351)(268, 1)
endcolor*
1118 30 1119 30 1119 354 1118 354 box* %(1118, 30)(1, 324)
833 354 1119 354 1119 355 833 355 box* %(833, 354)(286, 1)
endcolor*
1121 27 1122 27 1122 357 1121 357 box* %(1121, 27)(1, 330)
830 357 1122 357 1122 358 830 358 box* %(830, 357)(292, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1122 27 1123 27 1123 358 1122 358 box* %(1122, 27)(1, 331)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
831 358 1123 358 1123 359 831 359 box* %(831, 358)(292, 1)
endcolor*
857 383 1032 383 1032 450 857 450 clean*
0 0 0 begincolor* % black
857 383 1031 383 1031 384 857 384 box* %(857, 383)(174, 1)
857 384 858 384 858 448 857 448 box* %(857, 384)(1, 64)
0 0 0 begincolor* % black
860 386 1028 386 1028 387 860 387 box* %(860, 386)(168, 1)
860 387 861 387 861 445 860 445 box* %(860, 387)(1, 58)
/Courier 100 18 875 407 (state_next) text*
/Courier 30 18 975 407 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 1005 407 (6) text*
endcolor*
/Courier 40 18 875 425 (word) text*
/Courier 30 18 975 425 ( = ) text*
0 0 0 begincolor* % black
/Courier 20 18 1005 425 (15) text*
endcolor*
/Courier 40 18 875 443 (prob) text*
/Courier 30 18 975 443 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 1005 443 (0) text*
endcolor*
1027 387 1028 387 1028 445 1027 445 box* %(1027, 387)(1, 58)
860 445 1028 445 1028 446 860 446 box* %(860, 445)(168, 1)
endcolor*
1030 384 1031 384 1031 448 1030 448 box* %(1030, 384)(1, 64)
857 448 1031 448 1031 449 857 449 box* %(857, 448)(174, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1031 384 1032 384 1032 449 1031 449 box* %(1031, 384)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
858 449 1032 449 1032 450 858 450 box* %(858, 449)(174, 1)
endcolor*
292 11 637 11 637 150 292 150 clean*
0 0 0 begincolor* % black
292 11 636 11 636 12 292 12 box* %(292, 11)(344, 1)
292 12 293 12 293 148 292 148 box* %(292, 12)(1, 136)
0 0 0 begincolor* % black
295 14 633 14 633 15 295 15 box* %(295, 14)(338, 1)
295 15 296 15 296 145 295 145 box* %(295, 15)(1, 130)
/Courier 50 18 310 35 (words) text*
/Courier 30 18 450 35 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 480 35 (0x808fee8) text*
endcolor*
/Courier 90 18 310 53 (num_words) text*
/Courier 30 18 450 53 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 480 53 (5) text*
endcolor*
/Courier 40 18 310 71 (name) text*
/Courier 30 18 450 71 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 480 71 (0x808fd30) text*
endcolor*
/Courier 140 18 310 89 (num_words_name) text*
/Courier 30 18 450 89 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 480 89 (0) text*
endcolor*
/Courier 20 18 310 107 (bo) text*
/Courier 30 18 450 107 ( = ) text*
0 0 0 begincolor* % black
/Courier 150 18 480 107 (-3.40282347e+38) text*
endcolor*
/Courier 80 18 310 125 (state_bo) text*
/Courier 30 18 450 125 ( = ) text*
0 0 0.545098 begincolor* % blue4
1 0 0 begincolor* % red
/Courier 30 18 480 125 (0x0) text*
endcolor*
endcolor*
/Courier 90 18 310 143 (num_state) text*
/Courier 30 18 450 143 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 480 143 (0) text*
endcolor*
632 15 633 15 633 145 632 145 box* %(632, 15)(1, 130)
295 145 633 145 633 146 295 146 box* %(295, 145)(338, 1)
endcolor*
635 12 636 12 636 148 635 148 box* %(635, 12)(1, 136)
292 148 636 148 636 149 292 149 box* %(292, 148)(344, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
636 12 637 12 637 149 636 149 box* %(636, 12)(1, 137)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
293 149 637 149 637 150 293 150 box* %(293, 149)(344, 1)
endcolor*
endcolor*
%%Trailer

% $Id$
% Trailer for DDD PostScript Box output

grestore
showpage
end		% of ddddict 
