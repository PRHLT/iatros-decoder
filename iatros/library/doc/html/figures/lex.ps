%!PS-Adobe-2.0 EPSF-2.0
%%Creator: Box::print() by Christian Lindig
%%BoundingBox: 42 35 552 267
%%Pages: 1
%%EndComments

gsave
37 273 translate
0.411622 -0.411622 scale
% $Id$
% Header for DDD PostScript Box output

% Copyright (C) 1995-1998 Technische Universitaet Braunschweig, Germany.
% Written by Christian Lindig <lindig@ips.cs.tu-bs.de>.
% 
% This file is part of DDD.
% 
% DDD is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public
% License as published by the Free Software Foundation; either
% version 2 of the License, or (at your option) any later version.
% 
% DDD is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public
% License along with DDD -- see the file COPYING.
% If not, write to the Free Software Foundation, Inc.,
% 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
% 
% DDD is the data display debugger.
% For details, see the DDD World-Wide-Web page, 
% `http://www.gnu.org/software/ddd/',
% or send a mail to the DDD developers <ddd@gnu.org>.

% Make all definitions local to the ddddict dictionary
/ddddict 25 dict def 

ddddict begin		% make dict active 


% Global variables
/fontSize+ 12 def
/font+ /Courier def  


% Some small utilities
/cm { 28.34646 mul } bind def


% ISOLATIN1* - reencode a font to ISO Latin 1 encoding
%
% newfont table oldfont isolatin1*

/isolatin1* {
	findfont
	dup maxlength dict begin
	{
		1 index /FID ne { def } { pop pop } ifelse
	} forall
	/Encoding exch def
	dup /FontName exch def
	currentdict end definefont pop
} bind def


% Define the ISO Latin 1 encoding of a font
 
/isotable[
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar
/braceright/asciitilde/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve/dotaccent/dieresis
/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron/.notdef/exclamdown/cent
/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guilsinglleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve
/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex
/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute
/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis
/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def


% YCORRECT*
% The reference point of a string ist NOT its lower left corner but 
% its baseline.  Therefore, the y coordinate must be corrected.  
% Returns the correction for the current font.
%
% ycorrect* y

/ycorrect* {
	currentfont /FontBBox get
	aload pop pop pop
	currentfont /FontMatrix get dtransform
	exch pop
} def 


% TEXT*
% print out a string and make sure not to require more space than
% specified.
% font xsize ysize xorigin yorigin (string) text*

/text* {

	/string+ exch def		% set up some variables ..
	moveto				% move to (xorigin,yorigin)
	/ysize+ exch def
	/xsize+ exch def
	/thefont+ exch def

	% is the right font already selected ?

	thefont+ font+ ne 
	ysize+ fontSize+ ne
	or {	
		% set up the right font - reencode it	
		
		/Symbol thefont+ eq 
		{
			thefont+ findfont
		}{

			/isofont+ isotable thefont+ isolatin1*	
			/isofont+ findfont
		}ifelse

		[ysize+ 0 0 ysize+ neg 0 0] makefont
		setfont
		
		/font+ thefont+ def
		/fontSize+ ysize+ def
	} if

	% correct current point 

	0 ycorrect* neg rmoveto

	% string too long?  Scale it down ...
	% The actual font is scaled. There is a good chance,
	% that this will not happen too often when the font is not
	% changed during the calls of text*

	xsize+ string+ stringwidth pop div dup dup
	1 lt {
		0 0 1 0 0 6 array astore currentfont exch 
		makefont setfont
		pop
	}{ 
		% string is too short ... scale it up

		1.05 gt {
			0 0 1 0 0 6 array astore currentfont exch 
			makefont setfont	
		}{
			pop

		} ifelse
	} ifelse
	
	string+ show

} bind def

	
% ARROWLINE*
% Draw a line of given width with an arrow at its end
% len gives the height of the triangle forming the head of the arrow
% and angle the angle at its top
%	
% angle len  x1 y1 x2 y2 linewidth arrowline*

/arrowline* {
	setlinewidth			% angle len x1 y1 x2 y2
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/len+ exch def			% height of triangle

	/alpha+ 
		y2 y1 sub		% define alpha+
		x2 x1 sub
		atan
	def

	/base+				% define half of baseline
		exch 
		2 div dup		% angle angle
		sin exch cos 	 	% sin(angle) cos(angle)
		div			% tan(angle)
		len+
		mul			% half of baseline
	def  
	
	newpath				% draw the line
	x1 y1 moveto 
	x2 len+ alpha+ cos mul sub 	% shorten the line to the end  
	y2 len+ alpha+ sin mul sub 	% of the triangle
	lineto
	stroke		

	gsave				% set the origin to the head of
	0 setlinewidth			% the arrow and rotate the system
	x2 y2 
	translate			% origin now at x2 y2

	alpha+ 90 sub rotate 		% rotate the system

	newpath				% draw a triangle
	0 0 moveto
	base+ len+ neg rlineto
	base+ 2 mul neg 0 rlineto
	closepath
	fill
	
	grestore
} bind def

% ARROWHEAD*
% draw an arrow head inclined by alpha at (x,y)
%
% angle len alpha x y

/arrowhead* {
	/y exch def
	/x exch def
	/alpha+ exch def
	/len+ exch def			% height of triangle

	/base+				% define half of baseline
		exch 
		2 div dup		% angle angle
		sin exch cos 	 	% sin(angle) cos(angle)
		div			% tan(angle)
		len+
		mul			% half of baseline
	def

	gsave				% set the origin to the head of
	0 setlinewidth			% the arrow and rotate the system
	x y 
	translate			% origin now at x y

	alpha+ 90 sub rotate 		% rotate the system

	newpath				% draw a triangle
	0 0 moveto
	base+ len+ neg rlineto
	base+ 2 mul neg 0 rlineto
	closepath
	fill
	
	grestore
} bind def


% LINE*
% draw a line of given width from (x1,y1) to (x2,y2)
%
% x1 y1 x2 y2 width line*

/line* {
	setlinewidth	% x1 y1 x2 y2
	newpath
	4 2 roll 	% x2 y2 x1 y1
	moveto		% x2 y2
	lineto		
	stroke
} bind def


% CLEAN*
%
% fill a box given by four points with white colour ..
% x1 y1 x2 y2 x3 y3 x4 y4 clean*

/clean* {
	gsave
	1 setgray
	0 setlinewidth
	newpath
	moveto  lineto  lineto lineto
	closepath
	fill
	grestore
} bind def


% BOX*
% fill a box given by four points
%
% x1 y1 x2 y2 x3 y3 x4 y4 box*

/box* {
	0 setlinewidth
	newpath
	moveto 	lineto 	lineto lineto
	closepath
	fill
} bind def


% ARC*
% draw an ellipse with center (cx,cy), radius dx dy, starting at start
% and ending at end.
%
% start end dx dy cx cy width arc*

/arc* {
	gsave
	setlinewidth
	translate
	newpath
	dup 3 1 roll		% start end dy dx dy
	div 1 scale		% dy dx/dy 1 scale => start end dy
	
	0 exch  0 exch		% start end 0 0 dy 
	5 -2 roll 		% 0 0 dy start end

	dup
	0 eq {			% replace 0 by 360
		pop 
		360
	} if
	arc
	stroke
	grestore
} bind def


% BEGINCOLOR* / ENDCOLOR*
% Draw something using a specific foreground color
%
% red green blue begincolor* SOMETHING endcolor*

/begincolor* {
        currentrgbcolor         % red green blue red' green' blue'
        6 3 roll                % red' green' blue' red green blue
	setrgbcolor             % red' green' blue'
} bind def

/endcolor* {
	setrgbcolor
} bind def


% Set up the right font to the right size

/isofont+ isotable font+ isolatin1* 	% reencode font+
					% and make it the current font
/isofont+ findfont
[fontSize+ 0 0 fontSize+ neg 0 0] makefont
setfont


%%EndProlog
0 0 0.545098 begincolor*
30 10 123 71 132 88 1 arrowline*
/Helvetica-Narrow 12 13 121 77 (*\(\)) text*
30 10 144 136 144 180 1 arrowline*
/Helvetica-Narrow 53 13 118 156 (.models[17]) text*
30 10 146 204 150 228 1 arrowline*
/Helvetica-Narrow 12 13 142 214 (*\(\)) text*
30 10 307 288 343 288 1 arrowline*
/Helvetica-Narrow 66 13 292 286 (.states[0] @ 7) text*
30 10 457 217 566 81 1 arrowline*
/Helvetica-Narrow 24 13 499 147 (*\(\)[0]) text*
30 10 457 241 553 161 1 arrowline*
/Helvetica-Narrow 24 13 493 199 (*\(\)[1]) text*
30 10 457 265 513 241 1 arrowline*
/Helvetica-Narrow 24 13 473 251 (*\(\)[2]) text*
30 10 457 288 473 288 1 arrowline*
/Helvetica-Narrow 24 13 453 286 (*\(\)[3]) text*
30 10 457 316 526 351 1 arrowline*
/Helvetica-Narrow 24 13 479 331 (*\(\)[4]) text*
30 10 457 340 556 431 1 arrowline*
/Helvetica-Narrow 24 13 494 383 (*\(\)[5]) text*
30 10 457 364 568 511 1 arrowline*
/Helvetica-Narrow 24 13 500 435 (*\(\)[6]) text*
30 10 709 48 759 48 1 arrowline*
/Helvetica-Narrow 65 13 702 46 (.edges[0] @ 2) text*
30 10 873 51 957 56 1 arrowline*
/Helvetica-Narrow 24 13 903 51 (*\(\)[0]) text*
30 10 873 70 996 118 1 arrowline*
/Helvetica-Narrow 24 13 922 92 (*\(\)[1]) text*
30 10 709 384 729 384 1 arrowline*
/Helvetica-Narrow 27 13 706 382 (edges) text*
30 10 935 384 957 384 1 arrowline*
/Helvetica-Narrow 12 13 940 382 (*\(\)) text*
30 10 699 241 761 260 1 arrowline*
/Helvetica-Narrow 27 13 717 248 (edges) text*
30 10 903 272 957 272 1 arrowline*
/Helvetica-Narrow 12 13 924 270 (*\(\)) text*
endcolor*
0 0 0 begincolor*
14 25 211 25 211 71 14 71 clean*
0 0 0 begincolor* % black
14 25 210 25 210 26 14 26 box* %(14, 25)(196, 1)
14 26 15 26 15 69 14 69 box* %(14, 26)(1, 43)
0 0 0 begincolor* % black
/Courier 10 18 17 46 (1) text*
/Courier 20 18 27 46 (: ) text*
/Courier-BoldOblique 30 18 47 46 (lex) text*
endcolor*
17 46 207 46 207 47 17 47 box* %(17, 46)(190, 1)
0 0 0.545098 begincolor* % blue4
/Courier 190 18 17 67 (\(lex_t *\) 0x807ad18) text*
endcolor*
209 26 210 26 210 69 209 69 box* %(209, 26)(1, 43)
14 69 210 69 210 70 14 70 box* %(14, 69)(196, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
210 26 211 26 211 70 210 70 box* %(210, 26)(1, 44)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
15 70 211 70 211 71 15 71 box* %(15, 70)(196, 1)
endcolor*
22 88 267 88 267 137 22 137 clean*
0 0 0 begincolor* % black
22 88 266 88 266 89 22 89 box* %(22, 88)(244, 1)
22 89 23 89 23 135 22 135 box* %(22, 89)(1, 46)
0 0 0 begincolor* % black
25 91 263 91 263 92 25 92 box* %(25, 91)(238, 1)
25 92 26 92 26 132 25 132 box* %(25, 92)(1, 40)
/Courier 100 18 40 112 (num_models) text*
/Courier 30 18 140 112 ( = ) text*
0 0 0 begincolor* % black
/Courier 40 18 170 112 (8172) text*
endcolor*
/Courier 60 18 40 130 (models) text*
/Courier 30 18 140 130 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 170 130 (0x98688f8) text*
endcolor*
262 92 263 92 263 132 262 132 box* %(262, 92)(1, 40)
25 132 263 132 263 133 25 133 box* %(25, 132)(238, 1)
endcolor*
265 89 266 89 266 135 265 135 box* %(265, 89)(1, 46)
22 135 266 135 266 136 22 136 box* %(22, 135)(244, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
266 89 267 89 267 136 266 136 box* %(266, 89)(1, 47)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
23 136 267 136 267 137 23 137 box* %(23, 136)(244, 1)
endcolor*
36 180 253 180 253 205 36 205 clean*
0 0 0 begincolor* % black
36 180 252 180 252 181 36 181 box* %(36, 180)(216, 1)
36 181 37 181 37 203 36 203 box* %(36, 181)(1, 22)
0 0 0.545098 begincolor* % blue4
/Courier 210 18 39 201 (\(model_t *\) 0x91908d8) text*
endcolor*
251 181 252 181 252 203 251 203 box* %(251, 181)(1, 22)
36 203 252 203 252 204 36 204 box* %(36, 203)(216, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
252 181 253 181 253 204 252 204 box* %(252, 181)(1, 23)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
37 204 253 204 253 205 37 205 box* %(37, 204)(216, 1)
endcolor*
13 228 308 228 308 349 13 349 clean*
0 0 0 begincolor* % black
13 228 307 228 307 229 13 229 box* %(13, 228)(294, 1)
13 229 14 229 14 347 13 347 box* %(13, 229)(1, 118)
0 0 0 begincolor* % black
16 231 304 231 304 232 16 232 box* %(16, 231)(288, 1)
16 232 17 232 17 344 16 344 box* %(16, 232)(1, 112)
/Courier 50 18 31 252 (label) text*
/Courier 30 18 131 252 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 140 18 161 252 (0x9190a00 \"10\") text*
endcolor*
/Courier 50 18 31 270 (vocab) text*
/Courier 30 18 131 270 ( = ) text*
0 0 0 begincolor* % black
0.996109 0.996109 0.796887 begincolor* % #ffffcc
161 252 301 252 301 270 161 270 box* %(161, 252)(140, 18)
endcolor*
0 0 0 begincolor* % black
/Courier 20 18 161 270 (17) text*
endcolor*
endcolor*
/Courier 60 18 31 288 (states) text*
/Courier 30 18 131 288 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 161 288 (0x9190ea0) text*
endcolor*
/Courier 100 18 31 306 (num_states) text*
/Courier 30 18 131 306 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 161 306 (7) text*
endcolor*
/Courier 70 18 31 324 (initial) text*
/Courier 30 18 131 324 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 161 324 (0) text*
endcolor*
0 0 0 begincolor* % black
/Courier 70 18 31 342 (end = 3) text*
endcolor*
303 232 304 232 304 344 303 344 box* %(303, 232)(1, 112)
16 344 304 344 304 345 16 345 box* %(16, 344)(288, 1)
endcolor*
306 229 307 229 307 347 306 347 box* %(306, 229)(1, 118)
13 347 307 347 307 348 13 348 box* %(13, 347)(294, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
307 229 308 229 308 348 307 348 box* %(307, 229)(1, 119)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
14 348 308 348 308 349 14 349 box* %(14, 348)(294, 1)
endcolor*
343 204 458 204 458 373 343 373 clean*
0 0 0 begincolor* % black
343 204 457 204 457 205 343 205 box* %(343, 204)(114, 1)
343 205 344 205 344 371 343 371 box* %(343, 205)(1, 166)
0 0 0.545098 begincolor* % blue4
346 207 454 207 454 208 346 208 box* %(346, 207)(108, 1)
346 208 347 208 347 368 346 368 box* %(346, 208)(1, 160)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 361 228 (0x91909a0) text*
endcolor*
361 230 451 230 451 231 361 231 box* %(361, 230)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 361 251 (0x91903c0) text*
endcolor*
361 253 451 253 451 254 361 254 box* %(361, 253)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 361 274 (0x9190b28) text*
endcolor*
361 276 451 276 451 277 361 277 box* %(361, 276)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 361 297 (0x918f428) text*
endcolor*
361 299 451 299 451 300 361 300 box* %(361, 299)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 361 320 (0x91906e0) text*
endcolor*
361 322 451 322 451 323 361 323 box* %(361, 322)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 361 343 (0x9190ec0) text*
endcolor*
361 345 451 345 451 346 361 346 box* %(361, 345)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 361 366 (0x9190f10) text*
endcolor*
453 208 454 208 454 368 453 368 box* %(453, 208)(1, 160)
346 368 454 368 454 369 346 369 box* %(346, 368)(108, 1)
endcolor*
456 205 457 205 457 371 456 371 box* %(456, 205)(1, 166)
343 371 457 371 457 372 343 372 box* %(343, 371)(114, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
457 205 458 205 458 372 457 372 box* %(457, 205)(1, 167)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
344 372 458 372 458 373 344 373 box* %(344, 372)(114, 1)
endcolor*
473 255 648 255 648 322 473 322 clean*
0 0 0 begincolor* % black
473 255 647 255 647 256 473 256 box* %(473, 255)(174, 1)
473 256 474 256 474 320 473 320 box* %(473, 256)(1, 64)
0 0 0 begincolor* % black
476 258 644 258 644 259 476 259 box* %(476, 258)(168, 1)
476 259 477 259 477 317 476 317 box* %(476, 259)(1, 58)
/Courier 50 18 491 279 (label) text*
/Courier 30 18 581 279 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 611 279 (3) text*
endcolor*
/Courier 50 18 491 297 (edges) text*
/Courier 30 18 581 297 ( = ) text*
0 0 0.545098 begincolor* % blue4
1 0 0 begincolor* % red
/Courier 30 18 611 297 (0x0) text*
endcolor*
endcolor*
/Courier 90 18 491 315 (num_edges) text*
/Courier 30 18 581 315 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 611 315 (0) text*
endcolor*
643 259 644 259 644 317 643 317 box* %(643, 259)(1, 58)
476 317 644 317 644 318 476 318 box* %(476, 317)(168, 1)
endcolor*
646 256 647 256 647 320 646 320 box* %(646, 256)(1, 64)
473 320 647 320 647 321 473 321 box* %(473, 320)(174, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
647 256 648 256 648 321 647 321 box* %(647, 256)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
474 321 648 321 648 322 474 322 box* %(474, 321)(174, 1)
endcolor*
475 431 710 431 710 498 475 498 clean*
0 0 0 begincolor* % black
475 431 709 431 709 432 475 432 box* %(475, 431)(234, 1)
475 432 476 432 476 496 475 496 box* %(475, 432)(1, 64)
0 0 0 begincolor* % black
478 434 706 434 706 435 478 435 box* %(478, 434)(228, 1)
478 435 479 435 479 493 478 493 box* %(478, 435)(1, 58)
/Courier 50 18 493 455 (label) text*
/Courier 30 18 583 455 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 455 (5) text*
endcolor*
/Courier 50 18 493 473 (edges) text*
/Courier 30 18 583 473 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 613 473 (0x9190f20) text*
endcolor*
/Courier 90 18 493 491 (num_edges) text*
/Courier 30 18 583 491 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 491 (1) text*
endcolor*
705 435 706 435 706 493 705 493 box* %(705, 435)(1, 58)
478 493 706 493 706 494 478 494 box* %(478, 493)(228, 1)
endcolor*
708 432 709 432 709 496 708 496 box* %(708, 432)(1, 64)
475 496 709 496 709 497 475 497 box* %(475, 496)(234, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
709 432 710 432 710 497 709 497 box* %(709, 432)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
476 497 710 497 710 498 476 498 box* %(476, 497)(234, 1)
endcolor*
475 15 710 15 710 82 475 82 clean*
0 0 0 begincolor* % black
475 15 709 15 709 16 475 16 box* %(475, 15)(234, 1)
475 16 476 16 476 80 475 80 box* %(475, 16)(1, 64)
0 0 0 begincolor* % black
478 18 706 18 706 19 478 19 box* %(478, 18)(228, 1)
478 19 479 19 479 77 478 77 box* %(478, 19)(1, 58)
/Courier 50 18 493 39 (label) text*
/Courier 30 18 583 39 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 39 (0) text*
endcolor*
/Courier 50 18 493 57 (edges) text*
/Courier 30 18 583 57 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 613 57 (0x9190918) text*
endcolor*
/Courier 90 18 493 75 (num_edges) text*
/Courier 30 18 583 75 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 75 (2) text*
endcolor*
705 19 706 19 706 77 705 77 box* %(705, 19)(1, 58)
478 77 706 77 706 78 478 78 box* %(478, 77)(228, 1)
endcolor*
708 16 709 16 709 80 708 80 box* %(708, 16)(1, 64)
475 80 709 80 709 81 475 81 box* %(475, 80)(234, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
709 16 710 16 710 81 709 81 box* %(709, 16)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
476 81 710 81 710 82 476 82 box* %(476, 81)(234, 1)
endcolor*
475 95 710 95 710 162 475 162 clean*
0 0 0 begincolor* % black
475 95 709 95 709 96 475 96 box* %(475, 95)(234, 1)
475 96 476 96 476 160 475 160 box* %(475, 96)(1, 64)
0 0 0 begincolor* % black
478 98 706 98 706 99 478 99 box* %(478, 98)(228, 1)
478 99 479 99 479 157 478 157 box* %(478, 99)(1, 58)
/Courier 50 18 493 119 (label) text*
/Courier 30 18 583 119 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 119 (1) text*
endcolor*
/Courier 50 18 493 137 (edges) text*
/Courier 30 18 583 137 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 613 137 (0x9190b38) text*
endcolor*
/Courier 90 18 493 155 (num_edges) text*
/Courier 30 18 583 155 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 155 (1) text*
endcolor*
705 99 706 99 706 157 705 157 box* %(705, 99)(1, 58)
478 157 706 157 706 158 478 158 box* %(478, 157)(228, 1)
endcolor*
708 96 709 96 709 160 708 160 box* %(708, 96)(1, 64)
475 160 709 160 709 161 475 161 box* %(475, 160)(234, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
709 96 710 96 710 161 709 161 box* %(709, 96)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
476 161 710 161 710 162 476 162 box* %(476, 161)(234, 1)
endcolor*
475 351 710 351 710 418 475 418 clean*
0 0 0 begincolor* % black
475 351 709 351 709 352 475 352 box* %(475, 351)(234, 1)
475 352 476 352 476 416 475 416 box* %(475, 352)(1, 64)
0 0 0 begincolor* % black
478 354 706 354 706 355 478 355 box* %(478, 354)(228, 1)
478 355 479 355 479 413 478 413 box* %(478, 355)(1, 58)
/Courier 50 18 493 375 (label) text*
/Courier 30 18 583 375 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 375 (4) text*
endcolor*
/Courier 50 18 493 393 (edges) text*
/Courier 30 18 583 393 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 613 393 (0x9190ed0) text*
endcolor*
/Courier 90 18 493 411 (num_edges) text*
/Courier 30 18 583 411 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 411 (1) text*
endcolor*
705 355 706 355 706 413 705 413 box* %(705, 355)(1, 58)
478 413 706 413 706 414 478 414 box* %(478, 413)(228, 1)
endcolor*
708 352 709 352 709 416 708 416 box* %(708, 352)(1, 64)
475 416 709 416 709 417 475 417 box* %(475, 416)(234, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
709 352 710 352 710 417 709 417 box* %(709, 352)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
476 417 710 417 710 418 476 418 box* %(476, 417)(234, 1)
endcolor*
729 372 936 372 936 397 729 397 clean*
0 0 0 begincolor* % black
729 372 935 372 935 373 729 373 box* %(729, 372)(206, 1)
729 373 730 373 730 395 729 395 box* %(729, 373)(1, 22)
0 0 0.545098 begincolor* % blue4
/Courier 200 18 732 393 (\(edge_t *\) 0x9190e48) text*
endcolor*
934 373 935 373 935 395 934 395 box* %(934, 373)(1, 22)
729 395 935 395 935 396 729 396 box* %(729, 395)(206, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
935 373 936 373 936 396 935 396 box* %(935, 373)(1, 23)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
730 396 936 396 936 397 730 397 box* %(730, 396)(206, 1)
endcolor*
475 175 710 175 710 242 475 242 clean*
0 0 0 begincolor* % black
475 175 709 175 709 176 475 176 box* %(475, 175)(234, 1)
475 176 476 176 476 240 475 240 box* %(475, 176)(1, 64)
0 0 0 begincolor* % black
478 178 706 178 706 179 478 179 box* %(478, 178)(228, 1)
478 179 479 179 479 237 478 237 box* %(478, 179)(1, 58)
/Courier 50 18 493 199 (label) text*
/Courier 30 18 583 199 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 199 (2) text*
endcolor*
/Courier 50 18 493 217 (edges) text*
/Courier 30 18 583 217 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 613 217 (0x91906f0) text*
endcolor*
/Courier 90 18 493 235 (num_edges) text*
/Courier 30 18 583 235 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 235 (1) text*
endcolor*
705 179 706 179 706 237 705 237 box* %(705, 179)(1, 58)
478 237 706 237 706 238 478 238 box* %(478, 237)(228, 1)
endcolor*
708 176 709 176 709 240 708 240 box* %(708, 176)(1, 64)
475 240 709 240 709 241 475 241 box* %(475, 240)(234, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
709 176 710 176 710 241 709 241 box* %(709, 176)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
476 241 710 241 710 242 476 242 box* %(476, 241)(234, 1)
endcolor*
697 260 904 260 904 285 697 285 clean*
0 0 0 begincolor* % black
697 260 903 260 903 261 697 261 box* %(697, 260)(206, 1)
697 261 698 261 698 283 697 283 box* %(697, 261)(1, 22)
0 0 0.545098 begincolor* % blue4
/Courier 200 18 700 281 (\(edge_t *\) 0x9190e60) text*
endcolor*
902 261 903 261 903 283 902 283 box* %(902, 261)(1, 22)
697 283 903 283 903 284 697 284 box* %(697, 283)(206, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
903 261 904 261 904 284 903 284 box* %(903, 261)(1, 23)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
698 284 904 284 904 285 698 285 box* %(698, 284)(206, 1)
endcolor*
475 511 710 511 710 578 475 578 clean*
0 0 0 begincolor* % black
475 511 709 511 709 512 475 512 box* %(475, 511)(234, 1)
475 512 476 512 476 576 475 576 box* %(475, 512)(1, 64)
0 0 0 begincolor* % black
478 514 706 514 706 515 478 515 box* %(478, 514)(228, 1)
478 515 479 515 479 573 478 573 box* %(478, 515)(1, 58)
/Courier 50 18 493 535 (label) text*
/Courier 30 18 583 535 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 535 (6) text*
endcolor*
/Courier 50 18 493 553 (edges) text*
/Courier 30 18 583 553 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 613 553 (0x9190f40) text*
endcolor*
/Courier 90 18 493 571 (num_edges) text*
/Courier 30 18 583 571 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 613 571 (1) text*
endcolor*
705 515 706 515 706 573 705 573 box* %(705, 515)(1, 58)
478 573 706 573 706 574 478 574 box* %(478, 573)(228, 1)
endcolor*
708 512 709 512 709 576 708 576 box* %(708, 512)(1, 64)
475 576 709 576 709 577 475 577 box* %(475, 576)(234, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
709 512 710 512 710 577 709 577 box* %(709, 512)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
476 577 710 577 710 578 476 578 box* %(476, 577)(234, 1)
endcolor*
957 342 1252 342 1252 427 957 427 clean*
0 0 0 begincolor* % black
957 342 1251 342 1251 343 957 343 box* %(957, 342)(294, 1)
957 343 958 343 958 425 957 425 box* %(957, 343)(1, 82)
0 0 0 begincolor* % black
960 345 1248 345 1248 346 960 346 box* %(960, 345)(288, 1)
960 346 961 346 961 422 960 422 box* %(960, 346)(1, 76)
/Courier 110 18 975 366 (destination) text*
/Courier 30 18 1085 366 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 1115 366 (5) text*
endcolor*
/Courier 50 18 975 384 (label) text*
/Courier 30 18 1085 384 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 130 18 1115 384 (0x9190ee0 \"0\") text*
endcolor*
/Courier 70 18 975 402 (phoneme) text*
/Courier 30 18 1085 402 ( = ) text*
0 0 0 begincolor* % black
0.996109 0.996109 0.796887 begincolor* % #ffffcc
1115 384 1245 384 1245 402 1115 402 box* %(1115, 384)(130, 18)
endcolor*
0 0 0 begincolor* % black
/Courier 20 18 1115 402 (11) text*
endcolor*
endcolor*
/Courier 110 18 975 420 (probability) text*
/Courier 30 18 1085 420 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 1115 420 (0) text*
endcolor*
1247 346 1248 346 1248 422 1247 422 box* %(1247, 346)(1, 76)
960 422 1248 422 1248 423 960 423 box* %(960, 422)(288, 1)
endcolor*
1250 343 1251 343 1251 425 1250 425 box* %(1250, 343)(1, 82)
957 425 1251 425 1251 426 957 426 box* %(957, 425)(294, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1251 343 1252 343 1252 426 1251 426 box* %(1251, 343)(1, 83)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
958 426 1252 426 1252 427 958 427 box* %(958, 426)(294, 1)
endcolor*
957 230 1252 230 1252 315 957 315 clean*
0 0 0 begincolor* % black
957 230 1251 230 1251 231 957 231 box* %(957, 230)(294, 1)
957 231 958 231 958 313 957 313 box* %(957, 231)(1, 82)
0 0 0 begincolor* % black
960 233 1248 233 1248 234 960 234 box* %(960, 233)(288, 1)
960 234 961 234 961 310 960 310 box* %(960, 234)(1, 76)
/Courier 110 18 975 254 (destination) text*
/Courier 30 18 1085 254 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 1115 254 (3) text*
endcolor*
/Courier 50 18 975 272 (label) text*
/Courier 30 18 1085 272 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 130 18 1115 272 (0x91908a8 \"@\") text*
endcolor*
/Courier 70 18 975 290 (phoneme) text*
/Courier 30 18 1085 290 ( = ) text*
0 0 0 begincolor* % black
0.996109 0.996109 0.796887 begincolor* % #ffffcc
1115 272 1245 272 1245 290 1115 290 box* %(1115, 272)(130, 18)
endcolor*
0 0 0 begincolor* % black
/Courier 20 18 1115 290 (24) text*
endcolor*
endcolor*
/Courier 110 18 975 308 (probability) text*
/Courier 30 18 1085 308 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 1115 308 (0) text*
endcolor*
1247 234 1248 234 1248 310 1247 310 box* %(1247, 234)(1, 76)
960 310 1248 310 1248 311 960 311 box* %(960, 310)(288, 1)
endcolor*
1250 231 1251 231 1251 313 1250 313 box* %(1250, 231)(1, 82)
957 313 1251 313 1251 314 957 314 box* %(957, 313)(294, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1251 231 1252 231 1252 314 1251 314 box* %(1251, 231)(1, 83)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
958 314 1252 314 1252 315 958 315 box* %(958, 314)(294, 1)
endcolor*
957 22 1252 22 1252 107 957 107 clean*
0 0 0 begincolor* % black
957 22 1251 22 1251 23 957 23 box* %(957, 22)(294, 1)
957 23 958 23 958 105 957 105 box* %(957, 23)(1, 82)
0 0 0 begincolor* % black
960 25 1248 25 1248 26 960 26 box* %(960, 25)(288, 1)
960 26 961 26 961 102 960 102 box* %(960, 26)(1, 76)
/Courier 110 18 975 46 (destination) text*
/Courier 30 18 1085 46 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 1115 46 (1) text*
endcolor*
/Courier 50 18 975 64 (label) text*
/Courier 30 18 1085 64 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 130 18 1115 64 (0x9190928 \"1\") text*
endcolor*
/Courier 70 18 975 82 (phoneme) text*
/Courier 30 18 1085 82 ( = ) text*
0 0 0 begincolor* % black
0.996109 0.996109 0.796887 begincolor* % #ffffcc
1115 64 1245 64 1245 82 1115 82 box* %(1115, 64)(130, 18)
endcolor*
0 0 0 begincolor* % black
/Courier 20 18 1115 82 (12) text*
endcolor*
endcolor*
/Courier 110 18 975 100 (probability) text*
/Courier 30 18 1085 100 ( = ) text*
0 0 0 begincolor* % black
/Courier 120 18 1115 100 (-0.510825574) text*
endcolor*
1247 26 1248 26 1248 102 1247 102 box* %(1247, 26)(1, 76)
960 102 1248 102 1248 103 960 103 box* %(960, 102)(288, 1)
endcolor*
1250 23 1251 23 1251 105 1250 105 box* %(1250, 23)(1, 82)
957 105 1251 105 1251 106 957 106 box* %(957, 105)(294, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1251 23 1252 23 1252 106 1251 106 box* %(1251, 23)(1, 83)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
958 106 1252 106 1252 107 958 107 box* %(958, 106)(294, 1)
endcolor*
957 118 1252 118 1252 203 957 203 clean*
0 0 0 begincolor* % black
957 118 1251 118 1251 119 957 119 box* %(957, 118)(294, 1)
957 119 958 119 958 201 957 201 box* %(957, 119)(1, 82)
0 0 0 begincolor* % black
960 121 1248 121 1248 122 960 122 box* %(960, 121)(288, 1)
960 122 961 122 961 198 960 198 box* %(960, 122)(1, 76)
/Courier 110 18 975 142 (destination) text*
/Courier 30 18 1085 142 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 1115 142 (4) text*
endcolor*
/Courier 50 18 975 160 (label) text*
/Courier 30 18 1085 160 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 130 18 1115 160 (0x9190758 \"1\") text*
endcolor*
/Courier 70 18 975 178 (phoneme) text*
/Courier 30 18 1085 178 ( = ) text*
0 0 0 begincolor* % black
0.996109 0.996109 0.796887 begincolor* % #ffffcc
1115 160 1245 160 1245 178 1115 178 box* %(1115, 160)(130, 18)
endcolor*
0 0 0 begincolor* % black
/Courier 20 18 1115 178 (12) text*
endcolor*
endcolor*
/Courier 110 18 975 196 (probability) text*
/Courier 30 18 1085 196 ( = ) text*
0 0 0 begincolor* % black
/Courier 100 18 1115 196 (-0.9162907) text*
endcolor*
1247 122 1248 122 1248 198 1247 198 box* %(1247, 122)(1, 76)
960 198 1248 198 1248 199 960 199 box* %(960, 198)(288, 1)
endcolor*
1250 119 1251 119 1251 201 1250 201 box* %(1250, 119)(1, 82)
957 201 1251 201 1251 202 957 202 box* %(957, 201)(294, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1251 119 1252 119 1252 202 1251 202 box* %(1251, 119)(1, 83)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
958 202 1252 202 1252 203 958 203 box* %(958, 202)(294, 1)
endcolor*
759 21 874 21 874 75 759 75 clean*
0 0 0 begincolor* % black
759 21 873 21 873 22 759 22 box* %(759, 21)(114, 1)
759 22 760 22 760 73 759 73 box* %(759, 22)(1, 51)
0 0 0.545098 begincolor* % blue4
762 24 870 24 870 25 762 25 box* %(762, 24)(108, 1)
762 25 763 25 763 70 762 70 box* %(762, 25)(1, 45)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 777 45 (0x9190e00) text*
endcolor*
777 47 867 47 867 48 777 48 box* %(777, 47)(90, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 777 68 (0x9190e78) text*
endcolor*
869 25 870 25 870 70 869 70 box* %(869, 25)(1, 45)
762 70 870 70 870 71 762 71 box* %(762, 70)(108, 1)
endcolor*
872 22 873 22 873 73 872 73 box* %(872, 22)(1, 51)
759 73 873 73 873 74 759 74 box* %(759, 73)(114, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
873 22 874 22 874 74 873 74 box* %(873, 22)(1, 52)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
760 74 874 74 874 75 760 75 box* %(760, 74)(114, 1)
endcolor*
endcolor*
%%Trailer

% $Id$
% Trailer for DDD PostScript Box output

grestore
showpage
end		% of ddddict 
