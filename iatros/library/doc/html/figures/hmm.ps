%!PS-Adobe-2.0 EPSF-2.0
%%Creator: Box::print() by Christian Lindig
%%BoundingBox: 42 35 552 218
%%Pages: 1
%%EndComments

gsave
36 231 translate
0.412955 -0.412955 scale
% $Id$
% Header for DDD PostScript Box output

% Copyright (C) 1995-1998 Technische Universitaet Braunschweig, Germany.
% Written by Christian Lindig <lindig@ips.cs.tu-bs.de>.
% 
% This file is part of DDD.
% 
% DDD is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public
% License as published by the Free Software Foundation; either
% version 2 of the License, or (at your option) any later version.
% 
% DDD is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
% See the GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public
% License along with DDD -- see the file COPYING.
% If not, write to the Free Software Foundation, Inc.,
% 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
% 
% DDD is the data display debugger.
% For details, see the DDD World-Wide-Web page, 
% `http://www.gnu.org/software/ddd/',
% or send a mail to the DDD developers <ddd@gnu.org>.

% Make all definitions local to the ddddict dictionary
/ddddict 25 dict def 

ddddict begin		% make dict active 


% Global variables
/fontSize+ 12 def
/font+ /Courier def  


% Some small utilities
/cm { 28.34646 mul } bind def


% ISOLATIN1* - reencode a font to ISO Latin 1 encoding
%
% newfont table oldfont isolatin1*

/isolatin1* {
	findfont
	dup maxlength dict begin
	{
		1 index /FID ne { def } { pop pop } ifelse
	} forall
	/Encoding exch def
	dup /FontName exch def
	currentdict end definefont pop
} bind def


% Define the ISO Latin 1 encoding of a font
 
/isotable[
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar
/braceright/asciitilde/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve/dotaccent/dieresis
/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron/.notdef/exclamdown/cent
/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guilsinglleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve
/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex
/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute
/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis
/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def


% YCORRECT*
% The reference point of a string ist NOT its lower left corner but 
% its baseline.  Therefore, the y coordinate must be corrected.  
% Returns the correction for the current font.
%
% ycorrect* y

/ycorrect* {
	currentfont /FontBBox get
	aload pop pop pop
	currentfont /FontMatrix get dtransform
	exch pop
} def 


% TEXT*
% print out a string and make sure not to require more space than
% specified.
% font xsize ysize xorigin yorigin (string) text*

/text* {

	/string+ exch def		% set up some variables ..
	moveto				% move to (xorigin,yorigin)
	/ysize+ exch def
	/xsize+ exch def
	/thefont+ exch def

	% is the right font already selected ?

	thefont+ font+ ne 
	ysize+ fontSize+ ne
	or {	
		% set up the right font - reencode it	
		
		/Symbol thefont+ eq 
		{
			thefont+ findfont
		}{

			/isofont+ isotable thefont+ isolatin1*	
			/isofont+ findfont
		}ifelse

		[ysize+ 0 0 ysize+ neg 0 0] makefont
		setfont
		
		/font+ thefont+ def
		/fontSize+ ysize+ def
	} if

	% correct current point 

	0 ycorrect* neg rmoveto

	% string too long?  Scale it down ...
	% The actual font is scaled. There is a good chance,
	% that this will not happen too often when the font is not
	% changed during the calls of text*

	xsize+ string+ stringwidth pop div dup dup
	1 lt {
		0 0 1 0 0 6 array astore currentfont exch 
		makefont setfont
		pop
	}{ 
		% string is too short ... scale it up

		1.05 gt {
			0 0 1 0 0 6 array astore currentfont exch 
			makefont setfont	
		}{
			pop

		} ifelse
	} ifelse
	
	string+ show

} bind def

	
% ARROWLINE*
% Draw a line of given width with an arrow at its end
% len gives the height of the triangle forming the head of the arrow
% and angle the angle at its top
%	
% angle len  x1 y1 x2 y2 linewidth arrowline*

/arrowline* {
	setlinewidth			% angle len x1 y1 x2 y2
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	/len+ exch def			% height of triangle

	/alpha+ 
		y2 y1 sub		% define alpha+
		x2 x1 sub
		atan
	def

	/base+				% define half of baseline
		exch 
		2 div dup		% angle angle
		sin exch cos 	 	% sin(angle) cos(angle)
		div			% tan(angle)
		len+
		mul			% half of baseline
	def  
	
	newpath				% draw the line
	x1 y1 moveto 
	x2 len+ alpha+ cos mul sub 	% shorten the line to the end  
	y2 len+ alpha+ sin mul sub 	% of the triangle
	lineto
	stroke		

	gsave				% set the origin to the head of
	0 setlinewidth			% the arrow and rotate the system
	x2 y2 
	translate			% origin now at x2 y2

	alpha+ 90 sub rotate 		% rotate the system

	newpath				% draw a triangle
	0 0 moveto
	base+ len+ neg rlineto
	base+ 2 mul neg 0 rlineto
	closepath
	fill
	
	grestore
} bind def

% ARROWHEAD*
% draw an arrow head inclined by alpha at (x,y)
%
% angle len alpha x y

/arrowhead* {
	/y exch def
	/x exch def
	/alpha+ exch def
	/len+ exch def			% height of triangle

	/base+				% define half of baseline
		exch 
		2 div dup		% angle angle
		sin exch cos 	 	% sin(angle) cos(angle)
		div			% tan(angle)
		len+
		mul			% half of baseline
	def

	gsave				% set the origin to the head of
	0 setlinewidth			% the arrow and rotate the system
	x y 
	translate			% origin now at x y

	alpha+ 90 sub rotate 		% rotate the system

	newpath				% draw a triangle
	0 0 moveto
	base+ len+ neg rlineto
	base+ 2 mul neg 0 rlineto
	closepath
	fill
	
	grestore
} bind def


% LINE*
% draw a line of given width from (x1,y1) to (x2,y2)
%
% x1 y1 x2 y2 width line*

/line* {
	setlinewidth	% x1 y1 x2 y2
	newpath
	4 2 roll 	% x2 y2 x1 y1
	moveto		% x2 y2
	lineto		
	stroke
} bind def


% CLEAN*
%
% fill a box given by four points with white colour ..
% x1 y1 x2 y2 x3 y3 x4 y4 clean*

/clean* {
	gsave
	1 setgray
	0 setlinewidth
	newpath
	moveto  lineto  lineto lineto
	closepath
	fill
	grestore
} bind def


% BOX*
% fill a box given by four points
%
% x1 y1 x2 y2 x3 y3 x4 y4 box*

/box* {
	0 setlinewidth
	newpath
	moveto 	lineto 	lineto lineto
	closepath
	fill
} bind def


% ARC*
% draw an ellipse with center (cx,cy), radius dx dy, starting at start
% and ending at end.
%
% start end dx dy cx cy width arc*

/arc* {
	gsave
	setlinewidth
	translate
	newpath
	dup 3 1 roll		% start end dy dx dy
	div 1 scale		% dy dx/dy 1 scale => start end dy
	
	0 exch  0 exch		% start end 0 0 dy 
	5 -2 roll 		% 0 0 dy start end

	dup
	0 eq {			% replace 0 by 360
		pop 
		360
	} if
	arc
	stroke
	grestore
} bind def


% BEGINCOLOR* / ENDCOLOR*
% Draw something using a specific foreground color
%
% red green blue begincolor* SOMETHING endcolor*

/begincolor* {
        currentrgbcolor         % red green blue red' green' blue'
        6 3 roll                % red' green' blue' red green blue
	setrgbcolor             % red' green' blue'
} bind def

/endcolor* {
	setrgbcolor
} bind def


% Set up the right font to the right size

/isofont+ isotable font+ isolatin1* 	% reencode font+
					% and make it the current font
/isofont+ findfont
[fontSize+ 0 0 fontSize+ neg 0 0] makefont
setfont


%%EndProlog
0 0 0.545098 begincolor*
30 10 120 87 132 117 1 arrowline*
/Helvetica-Narrow 12 13 120 100 (*\(\)) text*
30 10 333 183 448 140 1 arrowline*
/Helvetica-Narrow 47 13 367 160 (phonemes) text*
30 10 486 140 507 182 1 arrowline*
/Helvetica-Narrow 12 13 490 159 (*\(\)) text*
30 10 598 182 687 129 1 arrowline*
30 10 533 266 539 308 1 arrowline*
30 10 891 80 949 80 1 arrowline*
/Helvetica-Narrow 24 13 908 78 (*\(\)[1]) text*
30 10 1069 113 1075 127 1 arrowline*
/Helvetica-Narrow 34 13 1055 118 (mixture) text*
30 10 1077 193 1076 196 1 arrowline*
/Helvetica-Narrow 57 13 1049 192 (distributions) text*
30 10 1069 220 1066 230 1 arrowline*
/Helvetica-Narrow 12 13 1062 223 (*\(\)) text*
30 10 1056 314 1056 324 1 arrowline*
30 10 968 412 944 424 1 arrowline*
/Helvetica-Narrow 24 13 944 416 (mean) text*
30 10 1100 412 1112 424 1 arrowline*
/Helvetica-Narrow 38 13 1087 416 (variance) text*
endcolor*
0 0 0 begincolor*
14 41 211 41 211 87 14 87 clean*
0 0 0 begincolor* % black
14 41 210 41 210 42 14 42 box* %(14, 41)(196, 1)
14 42 15 42 15 85 14 85 box* %(14, 42)(1, 43)
0 0 0 begincolor* % black
/Courier 20 18 17 62 (42) text*
/Courier 20 18 37 62 (: ) text*
/Courier-BoldOblique 30 18 57 62 (hmm) text*
endcolor*
17 62 207 62 207 63 17 63 box* %(17, 62)(190, 1)
0 0 0.545098 begincolor* % blue4
/Courier 190 18 17 83 (\(hmm_t *\) 0x807ace0) text*
endcolor*
209 42 210 42 210 85 209 85 box* %(209, 42)(1, 43)
14 85 210 85 210 86 14 86 box* %(14, 85)(196, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
210 42 211 42 211 86 210 86 box* %(210, 42)(1, 44)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
15 86 211 86 211 87 15 87 box* %(15, 86)(196, 1)
endcolor*
19 117 334 117 334 364 19 364 clean*
0 0 0 begincolor* % black
19 117 333 117 333 118 19 118 box* %(19, 117)(314, 1)
19 118 20 118 20 362 19 362 box* %(19, 118)(1, 244)
0 0 0 begincolor* % black
22 120 330 120 330 121 22 121 box* %(22, 120)(308, 1)
22 121 23 121 23 359 22 359 box* %(22, 121)(1, 238)
/Courier 120 18 37 141 (num_phonemes) text*
/Courier 30 18 207 141 ( = ) text*
0 0 0 begincolor* % black
/Courier 20 18 237 141 (30) text*
endcolor*
/Courier 80 18 37 159 (phonemes) text*
/Courier 30 18 207 159 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 237 159 (0x8169bb8) text*
endcolor*
/Courier 100 18 37 177 (num_states) text*
/Courier 30 18 207 177 ( = ) text*
0 0 0 begincolor* % black
/Courier 20 18 237 177 (86) text*
endcolor*
/Courier 60 18 37 195 (states) text*
/Courier 30 18 207 195 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 237 195 (0x81699d8) text*
endcolor*
/Courier 100 18 37 213 (num_matrix) text*
/Courier 30 18 207 213 ( = ) text*
0 0 0 begincolor* % black
/Courier 20 18 237 213 (30) text*
endcolor*
/Courier 60 18 37 231 (matrix) text*
/Courier 30 18 207 231 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 237 231 (0x8169b38) text*
endcolor*
/Courier 170 18 37 249 (num_distributions) text*
/Courier 30 18 207 249 ( = ) text*
0 0 0 begincolor* % black
/Courier 40 18 237 249 (2752) text*
endcolor*
/Courier 130 18 37 267 (distributions) text*
/Courier 30 18 207 267 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 237 267 (0x8173f48) text*
endcolor*
/Courier 90 18 37 285 (num_means) text*
/Courier 30 18 207 285 ( = ) text*
0 0 0 begincolor* % black
/Courier 40 18 237 285 (2752) text*
endcolor*
/Courier 50 18 37 303 (means) text*
/Courier 30 18 207 303 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 237 303 (0x8185b30) text*
endcolor*
/Courier 130 18 37 321 (num_variances) text*
/Courier 30 18 207 321 ( = ) text*
0 0 0 begincolor* % black
/Courier 40 18 237 321 (2752) text*
endcolor*
/Courier 90 18 37 339 (variances) text*
/Courier 30 18 207 339 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 237 339 (0x817f280) text*
endcolor*
/Courier 120 18 37 357 (num_features) text*
/Courier 30 18 207 357 ( = ) text*
0 0 0 begincolor* % black
/Courier 20 18 237 357 (33) text*
endcolor*
329 121 330 121 330 359 329 359 box* %(329, 121)(1, 238)
22 359 330 359 330 360 22 360 box* %(22, 359)(308, 1)
endcolor*
332 118 333 118 333 362 332 362 box* %(332, 118)(1, 244)
19 362 333 362 333 363 19 363 box* %(19, 362)(314, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
333 118 334 118 334 363 333 363 box* %(333, 118)(1, 245)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
20 363 334 363 334 364 20 364 box* %(20, 363)(314, 1)
endcolor*
645 31 892 31 892 129 645 129 clean*
0 0 0 begincolor* % black
645 31 891 31 891 32 645 32 box* %(645, 31)(246, 1)
645 32 646 32 646 127 645 127 box* %(645, 32)(1, 95)
0 0 0 begincolor* % black
/Courier 20 18 648 52 (52) text*
/Courier 20 18 668 52 (: ) text*
/Courier-BoldOblique 200 18 688 52 (\(*hmm->ph...s[0] @ 3) text*
endcolor*
648 52 888 52 888 53 648 53 box* %(648, 52)(240, 1)
0 0 0.545098 begincolor* % blue4
648 55 888 55 888 56 648 56 box* %(648, 55)(240, 1)
648 56 649 56 649 124 648 124 box* %(648, 56)(1, 68)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 663 76 (0x8085e80) text*
endcolor*
663 78 885 78 885 79 663 79 box* %(663, 78)(222, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 663 99 (0x8088f00) text*
endcolor*
663 101 885 101 885 102 663 102 box* %(663, 101)(222, 1)
0 0 0.545098 begincolor* % blue4
/Courier 90 18 663 122 (0x808b950) text*
endcolor*
887 56 888 56 888 124 887 124 box* %(887, 56)(1, 68)
648 124 888 124 888 125 648 125 box* %(648, 124)(240, 1)
endcolor*
890 32 891 32 891 127 890 127 box* %(890, 32)(1, 95)
645 127 891 127 891 128 645 128 box* %(645, 127)(246, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
891 32 892 32 892 128 891 128 box* %(891, 32)(1, 96)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
646 128 892 128 892 129 646 129 box* %(646, 128)(246, 1)
endcolor*
949 47 1164 47 1164 114 949 114 clean*
0 0 0 begincolor* % black
949 47 1163 47 1163 48 949 48 box* %(949, 47)(214, 1)
949 48 950 48 950 112 949 112 box* %(949, 48)(1, 64)
0 0 0 begincolor* % black
952 50 1160 50 1160 51 952 51 box* %(952, 50)(208, 1)
952 51 953 51 953 109 952 109 box* %(952, 51)(1, 58)
/Courier 70 18 967 71 (mixture) text*
/Courier 30 18 1037 71 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 1067 71 (0x8085ea0) text*
endcolor*
/Courier 50 18 967 89 (label) text*
/Courier 30 18 1037 89 ( = ) text*
0 0 0.545098 begincolor* % blue4
1 0 0 begincolor* % red
/Courier 30 18 1067 89 (0x0) text*
endcolor*
endcolor*
/Courier 20 18 967 107 (id) text*
/Courier 30 18 1037 107 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 1067 107 (1) text*
endcolor*
1159 51 1160 51 1160 109 1159 109 box* %(1159, 51)(1, 58)
952 109 1160 109 1160 110 952 110 box* %(952, 109)(208, 1)
endcolor*
1162 48 1163 48 1163 112 1162 112 box* %(1162, 48)(1, 64)
949 112 1163 112 1163 113 949 113 box* %(949, 112)(214, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1163 48 1164 48 1164 113 1163 113 box* %(1163, 48)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
950 113 1164 113 1164 114 950 114 box* %(950, 113)(214, 1)
endcolor*
1024 424 1249 424 1249 473 1024 473 clean*
0 0 0 begincolor* % black
1024 424 1248 424 1248 425 1024 425 box* %(1024, 424)(224, 1)
1024 425 1025 425 1025 471 1024 471 box* %(1024, 425)(1, 46)
0 0 0 begincolor* % black
1027 427 1245 427 1245 428 1027 428 box* %(1027, 427)(218, 1)
1027 428 1028 428 1028 468 1027 468 box* %(1027, 428)(1, 40)
/Courier 50 18 1042 448 (label) text*
/Courier 30 18 1122 448 ( = ) text*
0 0 0.545098 begincolor* % blue4
1 0 0 begincolor* % red
/Courier 30 18 1152 448 (0x0) text*
endcolor*
endcolor*
/Courier 80 18 1042 466 (variance) text*
/Courier 30 18 1122 466 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 1152 466 (0x80864f8) text*
endcolor*
1244 428 1245 428 1245 468 1244 468 box* %(1244, 428)(1, 40)
1027 468 1245 468 1245 469 1027 469 box* %(1027, 468)(218, 1)
endcolor*
1247 425 1248 425 1248 471 1247 471 box* %(1247, 425)(1, 46)
1024 471 1248 471 1248 472 1024 472 box* %(1024, 471)(224, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1248 425 1249 425 1249 472 1248 472 box* %(1248, 425)(1, 47)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1025 472 1249 472 1249 473 1025 473 box* %(1025, 472)(224, 1)
endcolor*
931 127 1246 127 1246 194 931 194 clean*
0 0 0 begincolor* % black
931 127 1245 127 1245 128 931 128 box* %(931, 127)(314, 1)
931 128 932 128 932 192 931 192 box* %(931, 128)(1, 64)
0 0 0 begincolor* % black
934 130 1242 130 1242 131 934 131 box* %(934, 130)(308, 1)
934 131 935 131 935 189 934 189 box* %(934, 131)(1, 58)
/Courier 170 18 949 151 (num_distributions) text*
/Courier 30 18 1119 151 ( = ) text*
0 0 0 begincolor* % black
/Courier 20 18 1149 151 (32) text*
endcolor*
/Courier 110 18 949 169 (prior_probs) text*
/Courier 30 18 1119 169 ( = ) text*
0 0 0.545098 begincolor* % blue4
1 0 0 begincolor* % red
/Courier 30 18 1149 169 (0x0) text*
endcolor*
endcolor*
/Courier 130 18 949 187 (distributions) text*
/Courier 30 18 1119 187 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 1149 187 (0x8086580) text*
endcolor*
1241 131 1242 131 1242 189 1241 189 box* %(1241, 131)(1, 58)
934 189 1242 189 1242 190 934 190 box* %(934, 189)(308, 1)
endcolor*
1244 128 1245 128 1245 192 1244 192 box* %(1244, 128)(1, 64)
931 192 1245 192 1245 193 931 193 box* %(931, 192)(314, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1245 128 1246 128 1246 193 1245 193 box* %(1245, 128)(1, 65)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
932 193 1246 193 1246 194 932 194 box* %(932, 193)(314, 1)
endcolor*
929 230 1184 230 1184 315 929 315 clean*
0 0 0 begincolor* % black
929 230 1183 230 1183 231 929 231 box* %(929, 230)(254, 1)
929 231 930 231 930 313 929 313 box* %(929, 231)(1, 82)
0 0 0 begincolor* % black
932 233 1180 233 1180 234 932 234 box* %(932, 233)(248, 1)
932 234 933 234 933 310 932 310 box* %(932, 234)(1, 76)
/Courier 40 18 947 254 (type) text*
/Courier 30 18 1027 254 ( = ) text*
0 0 0 begincolor* % black
/Courier 80 18 1057 254 (GAUSSIAN) text*
endcolor*
/Courier 80 18 947 272 (gaussian) text*
/Courier 30 18 1027 272 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 1057 272 (0x8085ce8) text*
endcolor*
/Courier 50 18 947 290 (prior) text*
/Courier 30 18 1027 290 ( = ) text*
0 0 0 begincolor* % black
/Courier 120 18 1057 290 (0.0125278803) text*
endcolor*
/Courier 50 18 947 308 (label) text*
/Courier 30 18 1027 308 ( = ) text*
0 0 0.545098 begincolor* % blue4
1 0 0 begincolor* % red
/Courier 30 18 1057 308 (0x0) text*
endcolor*
endcolor*
1179 234 1180 234 1180 310 1179 310 box* %(1179, 234)(1, 76)
932 310 1180 310 1180 311 932 311 box* %(932, 310)(248, 1)
endcolor*
1182 231 1183 231 1183 313 1182 313 box* %(1182, 231)(1, 82)
929 313 1183 313 1183 314 929 314 box* %(929, 313)(254, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1183 231 1184 231 1184 314 1183 314 box* %(1183, 231)(1, 83)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
930 314 1184 314 1184 315 930 315 box* %(930, 314)(254, 1)
endcolor*
929 196 1216 196 1216 221 929 221 clean*
0 0 0 begincolor* % black
929 196 1215 196 1215 197 929 197 box* %(929, 196)(286, 1)
929 197 930 197 930 219 929 219 box* %(929, 197)(1, 22)
0 0 0.545098 begincolor* % blue4
/Courier 280 18 932 217 (\(distribution_t *\) 0x8085cf8) text*
endcolor*
1214 197 1215 197 1215 219 1214 219 box* %(1214, 197)(1, 22)
929 219 1215 219 1215 220 929 220 box* %(929, 219)(286, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1215 197 1216 197 1216 220 1215 220 box* %(1215, 197)(1, 23)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
930 220 1216 220 1216 221 930 221 box* %(930, 220)(286, 1)
endcolor*
933 324 1180 324 1180 412 933 412 clean*
0 0 0 begincolor* % black
933 324 1179 324 1179 325 933 325 box* %(933, 324)(246, 1)
933 325 934 325 934 410 933 410 box* %(933, 325)(1, 85)
0 0 0 begincolor* % black
/Courier 20 18 936 345 (66) text*
/Courier 20 18 956 345 (: ) text*
/Courier-BoldOblique 200 18 976 345 (*\(*\(\(*hmm...gaussian) text*
endcolor*
936 345 1176 345 1176 346 936 346 box* %(936, 345)(240, 1)
0 0 0 begincolor* % black
936 348 1176 348 1176 349 936 349 box* %(936, 348)(240, 1)
936 349 937 349 937 407 936 407 box* %(936, 349)(1, 58)
/Courier 40 18 951 369 (mean) text*
/Courier 30 18 1031 369 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 1061 369 (0x8086150) text*
endcolor*
/Courier 80 18 951 387 (variance) text*
/Courier 30 18 1031 387 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 1061 387 (0x8085cd8) text*
endcolor*
/Courier 80 18 951 405 (constant) text*
/Courier 30 18 1031 405 ( = ) text*
0 0 0 begincolor* % black
/Courier 100 18 1061 405 (466.287689) text*
endcolor*
1175 349 1176 349 1176 407 1175 407 box* %(1175, 349)(1, 58)
936 407 1176 407 1176 408 936 408 box* %(936, 407)(240, 1)
endcolor*
1178 325 1179 325 1179 410 1178 410 box* %(1178, 325)(1, 85)
933 410 1179 410 1179 411 933 411 box* %(933, 410)(246, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
1179 325 1180 325 1180 411 1179 411 box* %(1179, 325)(1, 86)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
934 411 1180 411 1180 412 934 412 box* %(934, 411)(246, 1)
endcolor*
799 424 994 424 994 473 799 473 clean*
0 0 0 begincolor* % black
799 424 993 424 993 425 799 425 box* %(799, 424)(194, 1)
799 425 800 425 800 471 799 471 box* %(799, 425)(1, 46)
0 0 0 begincolor* % black
802 427 990 427 990 428 802 428 box* %(802, 427)(188, 1)
802 428 803 428 803 468 802 468 box* %(802, 428)(1, 40)
/Courier 50 18 817 448 (label) text*
/Courier 30 18 867 448 ( = ) text*
0 0 0.545098 begincolor* % blue4
1 0 0 begincolor* % red
/Courier 30 18 897 448 (0x0) text*
endcolor*
endcolor*
/Courier 40 18 817 466 (mean) text*
/Courier 30 18 867 466 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 897 466 (0x80860c8) text*
endcolor*
989 428 990 428 990 468 989 468 box* %(989, 428)(1, 40)
802 468 990 468 990 469 802 469 box* %(802, 468)(188, 1)
endcolor*
992 425 993 425 993 471 992 471 box* %(992, 425)(1, 46)
799 471 993 471 993 472 799 472 box* %(799, 471)(194, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
993 425 994 425 994 472 993 472 box* %(993, 425)(1, 47)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
800 472 994 472 994 473 800 473 box* %(800, 472)(194, 1)
endcolor*
386 182 671 182 671 267 386 267 clean*
0 0 0 begincolor* % black
386 182 670 182 670 183 386 183 box* %(386, 182)(284, 1)
386 183 387 183 387 265 386 265 box* %(386, 183)(1, 82)
0 0 0 begincolor* % black
389 185 667 185 667 186 389 186 box* %(389, 185)(278, 1)
389 186 390 186 390 262 389 262 box* %(389, 186)(1, 76)
/Courier 50 18 404 206 (label) text*
/Courier 30 18 504 206 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 130 18 534 206 (0x8088eb8 \"B\") text*
endcolor*
/Courier 60 18 404 224 (states) text*
/Courier 30 18 504 224 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 534 224 (0x8085cc0) text*
endcolor*
/Courier 60 18 404 242 (matrix) text*
/Courier 30 18 504 242 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 534 242 (0x808b960) text*
endcolor*
/Courier 100 18 404 260 (num_states) text*
/Courier 30 18 504 260 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 534 260 (5) text*
endcolor*
666 186 667 186 667 262 666 262 box* %(666, 186)(1, 76)
389 262 667 262 667 263 389 263 box* %(389, 262)(278, 1)
endcolor*
669 183 670 183 670 265 669 265 box* %(669, 183)(1, 82)
386 265 670 265 670 266 386 266 box* %(386, 265)(284, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
670 183 671 183 671 266 670 266 box* %(670, 183)(1, 83)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
387 266 671 266 671 267 387 267 box* %(387, 266)(284, 1)
endcolor*
362 116 599 116 599 141 362 141 clean*
0 0 0 begincolor* % black
362 116 598 116 598 117 362 117 box* %(362, 116)(236, 1)
362 117 363 117 363 139 362 139 box* %(362, 117)(1, 22)
0 0 0.545098 begincolor* % blue4
/Courier 230 18 365 137 (\(phoneme_t *\) 0x80831c0) text*
endcolor*
597 117 598 117 598 139 597 139 box* %(597, 117)(1, 22)
362 139 598 139 598 140 362 140 box* %(362, 139)(236, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
598 117 599 117 599 140 598 140 box* %(598, 117)(1, 23)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
363 140 599 140 599 141 363 141 box* %(363, 140)(236, 1)
endcolor*
382 308 707 308 707 396 382 396 clean*
0 0 0 begincolor* % black
382 308 706 308 706 309 382 309 box* %(382, 308)(324, 1)
382 309 383 309 383 394 382 394 box* %(382, 309)(1, 85)
0 0 0 begincolor* % black
/Courier 20 18 385 329 (53) text*
/Courier 20 18 405 329 (: ) text*
/Courier-BoldOblique 200 18 425 329 (*\(*hmm->p...->matrix) text*
endcolor*
385 329 703 329 703 330 385 330 box* %(385, 329)(318, 1)
0 0 0 begincolor* % black
385 332 703 332 703 333 385 333 box* %(385, 332)(318, 1)
385 333 386 333 386 391 385 391 box* %(385, 333)(1, 58)
/Courier 50 18 400 353 (label) text*
/Courier 30 18 580 353 ( = ) text*
0 0 0.545098 begincolor* % blue4
1 0 0 begincolor* % red
/Courier 30 18 610 353 (0x0) text*
endcolor*
endcolor*
/Courier 180 18 400 371 (matrix_transitions) text*
/Courier 30 18 580 371 ( = ) text*
0 0 0.545098 begincolor* % blue4
/Courier 90 18 610 371 (0x8088bb8) text*
endcolor*
/Courier 150 18 400 389 (num_transitions) text*
/Courier 30 18 580 389 ( = ) text*
0 0 0 begincolor* % black
/Courier 10 18 610 389 (5) text*
endcolor*
702 333 703 333 703 391 702 391 box* %(702, 333)(1, 58)
385 391 703 391 703 392 385 392 box* %(385, 391)(318, 1)
endcolor*
705 309 706 309 706 394 705 394 box* %(705, 309)(1, 85)
382 394 706 394 706 395 382 395 box* %(382, 394)(324, 1)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
706 309 707 309 707 395 706 395 box* %(706, 309)(1, 86)
endcolor*
0.745098 0.745098 0.745098 begincolor* % grey
383 395 707 395 707 396 383 396 box* %(383, 395)(324, 1)
endcolor*
endcolor*
%%Trailer

% $Id$
% Trailer for DDD PostScript Box output

grestore
showpage
end		% of ddddict 
