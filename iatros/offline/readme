File organization
-----------------
In the src directory:
|- online: The online recognition program
|- prep: The preprocess stuff
 |- circularBuffer: Implementation of a circular buffer
 |- derivative: Derivative implementacion and get_deriv to compute derivative from a ceptstral file
 |- extractCC: Extract cepstrals from an audio file
 |- record: Record signal from microphone
|- recog: Offline recognition program
|- utils: Some utils for the viterbi implementation
|- viterbi: The viterbi implementation
 |- parsers: Some parsers for hmm, aef, ngram and lexic

Basic instructions to work in this project
------------------------------------------

Additional libraries
--------------------
The iAtros Sound System needs some external libraries:
-ALSA libray
-FFTW 3

Both can be installed in Debian-based distributions by using:
apt-get install libasound2-dev libfftw3-dev


CMake - Cross Platform Make
---------------------------

It is advisble to make a new directory called 'build'
were all build files will reside. Follow these intructions
to compile:
> cd build
> cmake .. -DCMAKE_BUILD_TYPE=debug           # for a non optimized build with debug information
or
> cmake .. -DCMAKE_BUILD_TYPE=release         # for an optimized build
or
> cmake .. -DCMAKE_BUILD_TYPE=relwithdebinfo  # for an optimized build with debug information
or
> cmake .. -DCMAKE_BUILD_TYPE=test            
depending on which kind of build you are interested in.
The 'test' option compiles the project with coverage enabled.
> make
for a normal compilation or
> make VERBOSE=1
if you want a detailed output.
Then, you can run
> make test
to ensure that the project is rightly build.

Note: in the following sections, additional cmake parameters
will be presented. It is important to note that these 
parameters are additive so to make a release compilation
with documentation enabled the command would be:
> cmake .. -DCMAKE_BUILD_TYPE=release -DBUILD_DOCUMENTATION=ON

Enable and disable features
---------------------------
To enable or disable features in the build process, use the 
flags -DENABLE_FEATURE=on or -DDISABLE_FEATURE=on respectively.

To enable statistics add the -DENABLE_STATISTICS=on flag to cmake:
cmake .. -DCMAKE_BUILD_TYPE=debug -DENABLE_STATISTICS=on

To disable the compilation of the online recognizer:
cmake .. -DCMAKE_BUILD_TYPE=debug -DDISABLE_ONLINE=on

Documentation
-------------
The documentation is generated by Doxygen. In order to do
so, do the following steps:
> cd build
> cmake .. -DBUILD_DOCUMENTATION=ON
> make doc
The documentation will be stored in the doc subdirectory.

Distribution
------------
Packages with source and/or binary files can be generated with a CMake feature
called CPack. To generate the packages follow these instructions: 
> cd build
> make package_source       # creates a tar.gz with the sources 
> make iAtros_deb           # creates a .deb with the binaries 
> make iAtros_rpm           # creates a .rpm with the binaries 

Cross-compiling
---------------
To cross-compile iatros to other platform, the toolchain must be changed. So far,
only windows cross-compiling is enabled. An example of how to do so follows:
> mkdir mingw32-build
> cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake.modules/Toolchain-mingw32.cmake
> make

Eclipse
-------
Recent versions of CMake allow the creation of Eclipse projects.
This process has some glitches, but for the setup explained in
above sections these can be fixed. The following instructions
are known to work in Eclipse 3.4 (Ganimedes) with CDT 5.0.1.
For previous versions, satisfactory results are not guarrantied.
> cd build
> cmake .. -G"Eclipse CDT4 - Unix Makefiles" -DECLIPSE_CDT4_GENERATE_SOURCE_PROJECT=TRUE
> mv .cproject .project ..
> cd ..

Now edit .cproject. Just below 
<storageModule moduleId="org.eclipse.cdt.core.pathentry">
remove all entries that look like this:
<pathentry kind="src" path="directory"/>

Edit .project. At the top of the file, change <name>myapp@build</name> to
<name>myapp</name>. At the end of the file, remove the complete sub-tree
<linkedResources> </linkedResources>.

These instructions are based on:
http://www.cmake.org/pipermail/cmake/2007-October/016993.html

Known problems
--------------
In some machines, the audio libraries only work if the OSS modules are disabled

